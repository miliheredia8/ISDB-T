#!/usr/bin/env python2
# -*- coding: utf-8 -*-
##################################################
# GNU Radio Python Flow Graph
# Title: Top Block
# Generated: Tue Jul 21 09:49:44 2020
##################################################

from distutils.version import StrictVersion

if __name__ == '__main__':
    import ctypes
    import sys
    if sys.platform.startswith('linux'):
        try:
            x11 = ctypes.cdll.LoadLibrary('libX11.so')
            x11.XInitThreads()
        except:
            print "Warning: failed to XInitThreads()"

from PyQt5 import Qt
from PyQt5 import Qt, QtCore
from gnuradio import analog
from gnuradio import blocks
from gnuradio import channels
from gnuradio import digital
from gnuradio import dtv
from gnuradio import eng_notation
from gnuradio import fft
from gnuradio import filter
from gnuradio import gr
from gnuradio import qtgui
from gnuradio.eng_option import eng_option
from gnuradio.fft import window
from gnuradio.filter import firdes
from gnuradio.qtgui import Range, RangeWidget
from optparse import OptionParser
import isdbt
import mer
import numpy as np
import pmt
import sip
import sys
from gnuradio import qtgui


class top_block(gr.top_block, Qt.QWidget):

    def __init__(self):
        gr.top_block.__init__(self, "Top Block")
        Qt.QWidget.__init__(self)
        self.setWindowTitle("Top Block")
        qtgui.util.check_set_qss()
        try:
            self.setWindowIcon(Qt.QIcon.fromTheme('gnuradio-grc'))
        except:
            pass
        self.top_scroll_layout = Qt.QVBoxLayout()
        self.setLayout(self.top_scroll_layout)
        self.top_scroll = Qt.QScrollArea()
        self.top_scroll.setFrameStyle(Qt.QFrame.NoFrame)
        self.top_scroll_layout.addWidget(self.top_scroll)
        self.top_scroll.setWidgetResizable(True)
        self.top_widget = Qt.QWidget()
        self.top_scroll.setWidget(self.top_widget)
        self.top_layout = Qt.QVBoxLayout(self.top_widget)
        self.top_grid_layout = Qt.QGridLayout()
        self.top_layout.addLayout(self.top_grid_layout)

        self.settings = Qt.QSettings("GNU Radio", "top_block")
        self.restoreGeometry(self.settings.value("geometry", type=QtCore.QByteArray))


        ##################################################
        # Variables
        ##################################################
        self.samp_rate = samp_rate = 8e6*64/63

        self.taps = taps = firdes.low_pass(1.0, samp_rate, 1e6, 6e6, firdes.WIN_HAMMING, 6.76)

        self.mode = mode = 3
        self.total_carriers = total_carriers = 2**(10+mode)
        self.symbol_table_QPSK = symbol_table_QPSK = (1+1j, 1-1j, -1+1j, -1-1j)/np.sqrt(2)
        self.symbol_table_64QAM = symbol_table_64QAM = (7+7j, 7+5j, 5+7j, 5+5j, 7+1j, 7+3j, 5+1j, 5+3j, 1+7j, 1+5j, 3+7j, 3+5j, 1+1j, 1+3j, 3+1j, 3+3j, 7-7j, 7-5j, 5-7j, 5-5j, 7-1j, 7-3j, 5-1j, 5-3j, 1-7j, 1-5j, 3-7j, 3-5j, 1-1j, 1-3j, 3-1j, 3-3j, -7+7j, -7+5j, -5+7j, -5+5j, -7+1j, -7+3j, -5+1j, -5+3j, -1+7j, -1+5j, -3+7j, -3+5j, -1+1j, -1+3j, -3+1j, -3+3j, -7-7j, -7-5j, -5-7j, -5-5j, -7-1j, -7-3j, -5-1j, -5-3j, -1-7j, -1-5j, -3-7j, -3-5j, -1-1j, -1-3j, -3-1j, -3-3j)/np.sqrt(42)
        self.segments_c = segments_c = 0
        self.segments_b = segments_b = 12
        self.segments_a = segments_a = 1
        self.phase_noise = phase_noise = 0
        self.noise_volt = noise_volt = 0
        self.length_c = length_c = 0
        self.length_b = length_b = 2
        self.length_a = length_a = 4
        self.guard = guard = 1.0/16
        self.frec_offset = frec_offset = 0
        self.delay = delay = (len(taps)/2)-1
        self.data_carriers = data_carriers = 13*96*2**(mode-1)
        self.bb_gain = bb_gain = 0.0022097087
        self.TOI = TOI = 0
        self.SOI = SOI = 0
        self.Quad_Offset = Quad_Offset = 0
        self.Infase_Offset = Infase_Offset = 0
        self.IQ_Phase_Imbalance = IQ_Phase_Imbalance = 0
        self.IQ_Mag_Imbalance = IQ_Mag_Imbalance = 0
        self.AjusteMascara = AjusteMascara = 0

        ##################################################
        # Blocks
        ##################################################
        self.tab = Qt.QTabWidget()
        self.tab_widget_0 = Qt.QWidget()
        self.tab_layout_0 = Qt.QBoxLayout(Qt.QBoxLayout.TopToBottom, self.tab_widget_0)
        self.tab_grid_layout_0 = Qt.QGridLayout()
        self.tab_layout_0.addLayout(self.tab_grid_layout_0)
        self.tab.addTab(self.tab_widget_0, 'Medici\xc3\xb3n MER')
        self.top_grid_layout.addWidget(self.tab)
        self._phase_noise_range = Range(-50, 50, 1, 0, 200)
        self._phase_noise_win = RangeWidget(self._phase_noise_range, self.set_phase_noise, 'Channel: Phase Noise', "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._phase_noise_win, 3, 0, 1, 2)
        for r in range(3, 4):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(0, 2):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._noise_volt_range = Range(0, 1, 1e-3, 0, 200)
        self._noise_volt_win = RangeWidget(self._noise_volt_range, self.set_noise_volt, 'Channel: Noise Voltage', "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._noise_volt_win, 1, 0, 1, 2)
        for r in range(1, 2):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(0, 2):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._frec_offset_range = Range(-5e-3, 5e-3, 0.5e-3, 0, 200)
        self._frec_offset_win = RangeWidget(self._frec_offset_range, self.set_frec_offset, 'Channel: Frequency Offset', "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._frec_offset_win, 2, 0, 1, 2)
        for r in range(2, 3):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(0, 2):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._bb_gain_range = Range(0, 1, 1e-6, 0.0022097087, 200)
        self._bb_gain_win = RangeWidget(self._bb_gain_range, self.set_bb_gain, "bb_gain", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._bb_gain_win, 0, 0, 1, 2)
        for r in range(0, 1):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(0, 2):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._TOI_range = Range(0, 120, 1, 0, 200)
        self._TOI_win = RangeWidget(self._TOI_range, self.set_TOI, "TOI", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._TOI_win, 1, 2, 1, 3)
        for r in range(1, 2):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(2, 5):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._SOI_range = Range(0, 10, 1, 0, 200)
        self._SOI_win = RangeWidget(self._SOI_range, self.set_SOI, "SOI", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._SOI_win, 0, 2, 1, 3)
        for r in range(0, 1):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(2, 5):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._Quad_Offset_range = Range(0, 100, 1, 0, 200)
        self._Quad_Offset_win = RangeWidget(self._Quad_Offset_range, self.set_Quad_Offset, "Quad_Offset", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._Quad_Offset_win, 2, 2, 1, 3)
        for r in range(2, 3):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(2, 5):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._Infase_Offset_range = Range(0, 10, 0.5, 0, 200)
        self._Infase_Offset_win = RangeWidget(self._Infase_Offset_range, self.set_Infase_Offset, "Infase_Offset", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._Infase_Offset_win, 3, 2, 1, 3)
        for r in range(3, 4):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(2, 5):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._IQ_Phase_Imbalance_range = Range(0, 90, 1, 0, 200)
        self._IQ_Phase_Imbalance_win = RangeWidget(self._IQ_Phase_Imbalance_range, self.set_IQ_Phase_Imbalance, "IQ_Phase_Imbalance", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._IQ_Phase_Imbalance_win, 4, 2, 1, 3)
        for r in range(4, 5):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(2, 5):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._IQ_Mag_Imbalance_range = Range(0, 50, 1, 0, 200)
        self._IQ_Mag_Imbalance_win = RangeWidget(self._IQ_Mag_Imbalance_range, self.set_IQ_Mag_Imbalance, "IQ_Mag_Imbalance", "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._IQ_Mag_Imbalance_win, 4, 0, 1, 2)
        for r in range(4, 5):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(0, 2):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self._AjusteMascara_range = Range(0, 100, 1, 0, 200)
        self._AjusteMascara_win = RangeWidget(self._AjusteMascara_range, self.set_AjusteMascara, 'Ajuste mascara', "counter_slider", float)
        self.tab_grid_layout_0.addWidget(self._AjusteMascara_win, 9, 1, 1, 2)
        for r in range(9, 10):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(1, 3):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self.qtgui_vector_sink_f_0 = qtgui.vector_sink_f(
            4096,
            -(samp_rate/2)/1e6,
            (samp_rate/4096)/1e6,
            'MHz',
            'dBm',
            "Espectro de RF",
            4 # Number of inputs
        )
        self.qtgui_vector_sink_f_0.set_update_time(0.10)
        self.qtgui_vector_sink_f_0.set_y_axis(-100, -0)
        self.qtgui_vector_sink_f_0.enable_autoscale(False)
        self.qtgui_vector_sink_f_0.enable_grid(True)
        self.qtgui_vector_sink_f_0.set_x_axis_units("")
        self.qtgui_vector_sink_f_0.set_y_axis_units("")
        self.qtgui_vector_sink_f_0.set_ref_level(0)

        labels = ['Espectro Se\xc3\xb1al', 'M\xc3\xa1scara No Cr\xc3\xadtica', 'M\xc3\xa1scara Sub-Cr\xc3\xadtica', 'M\xc3\xa1scara Cr\xc3\xadtica', '',
                  '', '', '', '', '']
        widths = [1, 1, 1, 1, 1,
                  1, 1, 1, 1, 1]
        colors = ["blue", "red", "green", "black", "cyan",
                  "magenta", "yellow", "dark red", "dark green", "dark blue"]
        alphas = [1.0, 1.0, 1.0, 1.0, 1.0,
                  1.0, 1.0, 1.0, 1.0, 1.0]
        for i in xrange(4):
            if len(labels[i]) == 0:
                self.qtgui_vector_sink_f_0.set_line_label(i, "Data {0}".format(i))
            else:
                self.qtgui_vector_sink_f_0.set_line_label(i, labels[i])
            self.qtgui_vector_sink_f_0.set_line_width(i, widths[i])
            self.qtgui_vector_sink_f_0.set_line_color(i, colors[i])
            self.qtgui_vector_sink_f_0.set_line_alpha(i, alphas[i])

        self._qtgui_vector_sink_f_0_win = sip.wrapinstance(self.qtgui_vector_sink_f_0.pyqwidget(), Qt.QWidget)
        self.tab_grid_layout_0.addWidget(self._qtgui_vector_sink_f_0_win, 7, 1, 2, 3)
        for r in range(7, 9):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(1, 4):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self.qtgui_number_sink_0_0 = qtgui.number_sink(
            gr.sizeof_float,
            0,
            qtgui.NUM_GRAPH_VERT,
            1
        )
        self.qtgui_number_sink_0_0.set_update_time(0.10)
        self.qtgui_number_sink_0_0.set_title("Modulation Error Rate - RMS")

        labels = ['', '', '', '', '',
                  '', '', '', '', '']
        units = ['', '', '', '', '',
                 '', '', '', '', '']
        colors = [("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"),
                  ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black")]
        factor = [1, 1, 1, 1, 1,
                  1, 1, 1, 1, 1]
        for i in xrange(1):
            self.qtgui_number_sink_0_0.set_min(i, 0)
            self.qtgui_number_sink_0_0.set_max(i, 50)
            self.qtgui_number_sink_0_0.set_color(i, colors[i][0], colors[i][1])
            if len(labels[i]) == 0:
                self.qtgui_number_sink_0_0.set_label(i, "Data {0}".format(i))
            else:
                self.qtgui_number_sink_0_0.set_label(i, labels[i])
            self.qtgui_number_sink_0_0.set_unit(i, units[i])
            self.qtgui_number_sink_0_0.set_factor(i, factor[i])

        self.qtgui_number_sink_0_0.enable_autoscale(False)
        self._qtgui_number_sink_0_0_win = sip.wrapinstance(self.qtgui_number_sink_0_0.pyqwidget(), Qt.QWidget)
        self.tab_grid_layout_0.addWidget(self._qtgui_number_sink_0_0_win, 7, 4, 2, 1)
        for r in range(7, 9):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(4, 5):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self.qtgui_const_sink_x_0_0 = qtgui.const_sink_c(
        	1024, #size
        	"Constelación", #name
        	1 #number of inputs
        )
        self.qtgui_const_sink_x_0_0.set_update_time(0.10)
        self.qtgui_const_sink_x_0_0.set_y_axis(-2, 2)
        self.qtgui_const_sink_x_0_0.set_x_axis(-2, 2)
        self.qtgui_const_sink_x_0_0.set_trigger_mode(qtgui.TRIG_MODE_FREE, qtgui.TRIG_SLOPE_POS, 0.0, 0, "")
        self.qtgui_const_sink_x_0_0.enable_autoscale(False)
        self.qtgui_const_sink_x_0_0.enable_grid(True)
        self.qtgui_const_sink_x_0_0.enable_axis_labels(True)

        if not True:
          self.qtgui_const_sink_x_0_0.disable_legend()

        labels = ['', '', '', '', '',
                  '', '', '', '', '']
        widths = [1, 1, 1, 1, 1,
                  1, 1, 1, 1, 1]
        colors = ["blue", "red", "red", "red", "red",
                  "red", "red", "red", "red", "red"]
        styles = [0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0]
        markers = [0, 0, 0, 0, 0,
                   0, 0, 0, 0, 0]
        alphas = [1.0, 1.0, 1.0, 1.0, 1.0,
                  1.0, 1.0, 1.0, 1.0, 1.0]
        for i in xrange(1):
            if len(labels[i]) == 0:
                self.qtgui_const_sink_x_0_0.set_line_label(i, "Data {0}".format(i))
            else:
                self.qtgui_const_sink_x_0_0.set_line_label(i, labels[i])
            self.qtgui_const_sink_x_0_0.set_line_width(i, widths[i])
            self.qtgui_const_sink_x_0_0.set_line_color(i, colors[i])
            self.qtgui_const_sink_x_0_0.set_line_style(i, styles[i])
            self.qtgui_const_sink_x_0_0.set_line_marker(i, markers[i])
            self.qtgui_const_sink_x_0_0.set_line_alpha(i, alphas[i])

        self._qtgui_const_sink_x_0_0_win = sip.wrapinstance(self.qtgui_const_sink_x_0_0.pyqwidget(), Qt.QWidget)
        self.tab_grid_layout_0.addWidget(self._qtgui_const_sink_x_0_0_win, 7, 0, 2, 1)
        for r in range(7, 9):
            self.tab_grid_layout_0.setRowStretch(r, 1)
        for c in range(0, 1):
            self.tab_grid_layout_0.setColumnStretch(c, 1)
        self.mer_probe_mer_c_0_0_0 = mer.probe_mer_c((symbol_table_64QAM),0.05)
        self.low_pass_filter_0_0 = filter.fir_filter_ccf(1, firdes.low_pass(
        	1, samp_rate, 5.8e6/2.0, 0.5e6, firdes.WIN_HAMMING, 6.76))
        self.isdbt_tmcc_encoder_0 = isdbt.tmcc_encoder(3, True, 4, 64, 4, 1, 2, 0, length_a, length_b, 0, segments_a, segments_b, 0)
        self.isdbt_time_interleaver_0 = isdbt.time_interleaver(3, segments_a, length_a, segments_b, length_b, segments_c, length_c)
        self.isdbt_subset_of_carriers_0_0 = isdbt.subset_of_carriers(96*4*13, 96*4*1, 13*96*4-1)
        self.isdbt_pilot_signals_0 = isdbt.pilot_signals(3)
        self.isdbt_isdbt_rf_channel_decoding_0_0 = isdbt.isdbt_rf_channel_decoding(
            max_freq_offset=31,
            guard=0.0625,
            mode=3,
            snr=10,
            tmcc_print=False,
        )
        self.isdbt_hierarchical_combinator_0 = isdbt.hierarchical_combinator(3, segments_a, segments_b, 0)
        self.isdbt_frequency_interleaver_0 = isdbt.frequency_interleaver(True, 3)
        self.isdbt_energy_dispersal_0_0 = isdbt.energy_dispersal(3, 64, 2, segments_b)
        self.isdbt_energy_dispersal_0 = isdbt.energy_dispersal(3, 4, 1, segments_a)
        self.isdbt_carrier_modulation_0_0 = isdbt.carrier_modulation(3, segments_b, 64)
        self.isdbt_carrier_modulation_0 = isdbt.carrier_modulation(3, segments_a, 4)
        self.isdbt_byte_interleaver_0_0 = isdbt.byte_interleaver(3, 64, 2, segments_b)
        self.isdbt_byte_interleaver_0 = isdbt.byte_interleaver(3, 4, 1, segments_a)
        self.fft_vxx_1 = fft.fft_vcc(total_carriers, False, (window.rectangular(total_carriers)), True, 1)
        self.fft_vxx_0 = fft.fft_vcc(4096, True, (window.flattop(4096)), True, 1)
        self.dtv_dvbt_reed_solomon_enc_0_0 = dtv.dvbt_reed_solomon_enc(2, 8, 0x11d, 255, 239, 8, 51, 1)
        self.dtv_dvbt_reed_solomon_enc_0 = dtv.dvbt_reed_solomon_enc(2, 8, 0x11d, 255, 239, 8, 51, 1)
        self.dtv_dvbt_inner_coder_0_0_0 = dtv.dvbt_inner_coder(1, 1512*4, dtv.MOD_64QAM, dtv.ALPHA4, dtv.C3_4)
        self.dtv_dvbt_inner_coder_0_0 = dtv.dvbt_inner_coder(1, 1512*4, dtv.MOD_QPSK, dtv.ALPHA4, dtv.C2_3)
        self.digital_ofdm_cyclic_prefixer_0 = digital.ofdm_cyclic_prefixer(total_carriers, total_carriers+int(total_carriers*guard), 0, '')
        self.channels_impairments_0 = channels.impairments(phase_noise, IQ_Mag_Imbalance, IQ_Phase_Imbalance, Quad_Offset, Infase_Offset, frec_offset, SOI, TOI)
        self.channels_channel_model_0 = channels.channel_model(
        	noise_voltage=noise_volt,
        	frequency_offset=frec_offset,
        	epsilon=1,
        	taps=(taps),
        	noise_seed=0,
        	block_tags=False
        )
        self.blocks_vector_to_stream_0_2_0 = blocks.vector_to_stream(gr.sizeof_gr_complex*1, 96*4*12)
        self.blocks_vector_to_stream_0_1_0 = blocks.vector_to_stream(gr.sizeof_char*1, 1512*4)
        self.blocks_vector_to_stream_0_1 = blocks.vector_to_stream(gr.sizeof_char*1, 1512*4)
        self.blocks_vector_source_x_0_0_0 = blocks.vector_source_f((-60.0,-59.9,-59.9,-59.8,-59.8,-59.7,-59.6,-59.6,-59.5,-59.5,-59.4,-59.3,-59.3,-59.2,-59.2,-59.1,-59.0,-59.0,-58.9,-58.9,-58.8,-58.7,-58.7,-58.6,-58.6,-58.5,-58.4,-58.4,-58.3,-58.3,-58.2,-58.1,-58.1,-58.0,-58.0,-57.9,-57.8,-57.8,-57.7,-57.7,-57.6,-57.5,-57.5,-57.4,-57.4,-57.3,-57.2,-57.2,-57.1,-57.1,-57.0,-56.9,-56.9,-56.8,-56.8,-56.7,-56.6,-56.6,-56.5,-56.5,-56.4,-56.3,-56.3,-56.2,-56.2,-56.1,-56.0,-56.0,-55.9,-55.9,-55.8,-55.7,-55.7,-55.6,-55.6,-55.5,-55.4,-55.4,-55.3,-55.3,-55.2,-55.1,-55.1,-55.0,-55.0,-54.9,-54.8,-54.8,-54.7,-54.7,-54.6,-54.5,-54.5,-54.4,-54.3,-54.3,-54.2,-54.2,-54.1,-54.0,-54.0,-53.9,-53.9,-53.8,-53.7,-53.7,-53.6,-53.6,-53.5,-53.4,-53.4,-53.3,-53.3,-53.2,-53.1,-53.1,-53.0,-53.0,-52.9,-52.8,-52.8,-52.7,-52.7,-52.6,-52.5,-52.5,-52.4,-52.4,-52.3,-52.2,-52.2,-52.1,-52.1,-52.0,-51.9,-51.9,-51.8,-51.8,-51.7,-51.6,-51.6,-51.5,-51.5,-51.4,-51.3,-51.3,-51.2,-51.2,-51.1,-51.0,-51.0,-50.9,-50.9,-50.8,-50.7,-50.7,-50.6,-50.6,-50.5,-50.4,-50.4,-50.3,-50.3,-50.2,-50.1,-50.1,-50.0,-50.0,-49.9,-49.8,-49.8,-49.7,-49.7,-49.6,-49.5,-49.5,-49.4,-49.4,-49.3,-49.2,-49.2,-49.1,-49.1,-49.0,-48.9,-48.9,-48.8,-48.8,-48.7,-48.6,-48.6,-48.5,-48.5,-48.4,-48.3,-48.3,-48.2,-48.2,-48.1,-48.0,-48.0,-47.9,-47.9,-47.8,-47.7,-47.7,-47.6,-47.6,-47.5,-47.4,-47.4,-47.3,-47.3,-47.2,-47.1,-47.1,-47.0,-47.0,-46.9,-46.8,-46.8,-46.7,-46.7,-46.6,-46.5,-46.5,-46.4,-46.4,-46.3,-46.2,-46.2,-46.1,-46.1,-46.0,-45.9,-45.9,-45.8,-45.8,-45.7,-45.6,-45.6,-45.5,-45.5,-45.4,-45.3,-45.3,-45.2,-45.2,-45.1,-45.0,-45.0,-44.9,-44.9,-44.8,-44.7,-44.7,-44.6,-44.6,-44.5,-44.4,-44.4,-44.3,-44.3,-44.2,-44.1,-44.1,-44.0,-44.0,-43.9,-43.8,-43.8,-43.7,-43.7,-43.6,-43.5,-43.5,-43.4,-43.3,-43.3,-43.2,-43.2,-43.1,-43.0,-43.0,-42.9,-42.9,-42.8,-42.7,-42.7,-42.6,-42.6,-42.5,-42.4,-42.4,-42.3,-42.3,-42.2,-42.1,-42.1,-42.0,-42.0,-41.9,-41.8,-41.8,-41.7,-41.7,-41.6,-41.5,-41.5,-41.4,-41.4,-41.3,-41.2,-41.2,-41.1,-41.1,-41.0,-40.9,-40.9,-40.8,-40.8,-40.7,-40.6,-40.6,-40.5,-40.5,-40.4,-40.3,-40.3,-40.2,-40.2,-40.1,-40.0,-40.0,-39.9,-39.9,-39.8,-39.7,-39.7,-39.6,-39.6,-39.5,-39.4,-39.4,-39.3,-39.3,-39.2,-39.1,-39.1,-39.0,-39.0,-38.9,-38.8,-38.8,-38.7,-38.7,-38.6,-38.5,-38.5,-38.4,-38.4,-38.3,-38.2,-38.2,-38.1,-38.1,-38.0,-37.9,-37.9,-37.8,-37.8,-37.7,-37.6,-37.6,-37.5,-37.5,-37.4,-37.3,-37.3,-37.2,-37.2,-37.1,-37.0,-37.0,-36.9,-36.9,-36.8,-36.7,-36.7,-36.6,-36.6,-36.5,-36.4,-36.4,-36.3,-36.3,-36.2,-36.1,-36.1,-36.0,-36.0,-35.9,-35.8,-35.8,-35.7,-35.7,-35.6,-35.5,-35.5,-35.4,-35.4,-35.3,-35.2,-35.2,-35.1,-35.1,-35.0,-34.9,-34.9,-34.8,-34.8,-34.7,-34.6,-34.6,-34.5,-34.5,-34.4,-34.3,-34.3,-34.2,-34.2,-34.1,-34.0,-34.0,-33.9,-33.9,-33.8,-33.7,-33.7,-33.6,-33.6,-33.5,-33.4,-33.4,-33.3,-33.3,-33.2,-33.1,-33.1,-33.0,-33.0,-32.9,-32.8,-32.8,-32.7,-32.7,-32.6,-32.5,-32.5,-32.4,-32.3,-32.3,-32.2,-32.2,-32.1,-32.0,-32.0,-31.9,-31.9,-31.8,-31.7,-31.7,-31.6,-31.6,-31.5,-31.4,-31.4,-31.3,-31.3,-31.2,-31.1,-31.1,-31.0,-31.0,-30.9,-30.8,-30.8,-30.7,-30.7,-30.6,-30.5,-30.5,-30.4,-30.4,-30.3,-30.2,-30.2,-30.1,-30.1,-30.0,-29.9,-29.9,-29.8,-29.8,-29.7,-29.6,-29.6,-29.5,-29.5,-29.4,-29.3,-29.3,-29.2,-29.2,-29.1,-29.0,-29.0,-28.9,-28.9,-28.8,-28.7,-28.7,-28.6,-28.6,-28.5,-28.4,-28.4,-28.3,-28.3,-28.2,-28.1,-28.1,-28.0,-28.0,-27.9,-27.8,-27.8,-27.7,-27.7,-27.6,-27.5,-27.5,-27.4,-27.4,-27.3,-27.2,-27.2,-27.1,-27.1,-27.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-27.0,-27.1,-27.1,-27.2,-27.2,-27.3,-27.4,-27.4,-27.5,-27.5,-27.6,-27.7,-27.7,-27.8,-27.8,-27.9,-28.0,-28.0,-28.1,-28.1,-28.2,-28.3,-28.3,-28.4,-28.4,-28.5,-28.6,-28.6,-28.7,-28.7,-28.8,-28.9,-28.9,-29.0,-29.0,-29.1,-29.2,-29.2,-29.3,-29.3,-29.4,-29.5,-29.5,-29.6,-29.6,-29.7,-29.8,-29.8,-29.9,-29.9,-30.0,-30.1,-30.1,-30.2,-30.2,-30.3,-30.4,-30.4,-30.5,-30.5,-30.6,-30.7,-30.7,-30.8,-30.8,-30.9,-31.0,-31.0,-31.1,-31.1,-31.2,-31.3,-31.3,-31.4,-31.4,-31.5,-31.6,-31.6,-31.7,-31.7,-31.8,-31.9,-31.9,-32.0,-32.0,-32.1,-32.2,-32.2,-32.3,-32.3,-32.4,-32.5,-32.5,-32.6,-32.7,-32.7,-32.8,-32.8,-32.9,-33.0,-33.0,-33.1,-33.1,-33.2,-33.3,-33.3,-33.4,-33.4,-33.5,-33.6,-33.6,-33.7,-33.7,-33.8,-33.9,-33.9,-34.0,-34.0,-34.1,-34.2,-34.2,-34.3,-34.3,-34.4,-34.5,-34.5,-34.6,-34.6,-34.7,-34.8,-34.8,-34.9,-34.9,-35.0,-35.1,-35.1,-35.2,-35.2,-35.3,-35.4,-35.4,-35.5,-35.5,-35.6,-35.7,-35.7,-35.8,-35.8,-35.9,-36.0,-36.0,-36.1,-36.1,-36.2,-36.3,-36.3,-36.4,-36.4,-36.5,-36.6,-36.6,-36.7,-36.7,-36.8,-36.9,-36.9,-37.0,-37.0,-37.1,-37.2,-37.2,-37.3,-37.3,-37.4,-37.5,-37.5,-37.6,-37.6,-37.7,-37.8,-37.8,-37.9,-37.9,-38.0,-38.1,-38.1,-38.2,-38.2,-38.3,-38.4,-38.4,-38.5,-38.5,-38.6,-38.7,-38.7,-38.8,-38.8,-38.9,-39.0,-39.0,-39.1,-39.1,-39.2,-39.3,-39.3,-39.4,-39.4,-39.5,-39.6,-39.6,-39.7,-39.7,-39.8,-39.9,-39.9,-40.0,-40.0,-40.1,-40.2,-40.2,-40.3,-40.3,-40.4,-40.5,-40.5,-40.6,-40.6,-40.7,-40.8,-40.8,-40.9,-40.9,-41.0,-41.1,-41.1,-41.2,-41.2,-41.3,-41.4,-41.4,-41.5,-41.5,-41.6,-41.7,-41.7,-41.8,-41.8,-41.9,-42.0,-42.0,-42.1,-42.1,-42.2,-42.3,-42.3,-42.4,-42.4,-42.5,-42.6,-42.6,-42.7,-42.7,-42.8,-42.9,-42.9,-43.0,-43.0,-43.1,-43.2,-43.2,-43.3,-43.3,-43.4,-43.5,-43.5,-43.6,-43.7,-43.7,-43.8,-43.8,-43.9,-44.0,-44.0,-44.1,-44.1,-44.2,-44.3,-44.3,-44.4,-44.4,-44.5,-44.6,-44.6,-44.7,-44.7,-44.8,-44.9,-44.9,-45.0,-45.0,-45.1,-45.2,-45.2,-45.3,-45.3,-45.4,-45.5,-45.5,-45.6,-45.6,-45.7,-45.8,-45.8,-45.9,-45.9,-46.0,-46.1,-46.1,-46.2,-46.2,-46.3,-46.4,-46.4,-46.5,-46.5,-46.6,-46.7,-46.7,-46.8,-46.8,-46.9,-47.0,-47.0,-47.1,-47.1,-47.2,-47.3,-47.3,-47.4,-47.4,-47.5,-47.6,-47.6,-47.7,-47.7,-47.8,-47.9,-47.9,-48.0,-48.0,-48.1,-48.2,-48.2,-48.3,-48.3,-48.4,-48.5,-48.5,-48.6,-48.6,-48.7,-48.8,-48.8,-48.9,-48.9,-49.0,-49.1,-49.1,-49.2,-49.2,-49.3,-49.4,-49.4,-49.5,-49.5,-49.6,-49.7,-49.7,-49.8,-49.8,-49.9,-50.0,-50.0,-50.1,-50.1,-50.2,-50.3,-50.3,-50.4,-50.4,-50.5,-50.6,-50.6,-50.7,-50.7,-50.8,-50.9,-50.9,-51.0,-51.0,-51.1,-51.2,-51.2,-51.3,-51.3,-51.4,-51.5,-51.5,-51.6,-51.6,-51.7,-51.8,-51.8,-51.9,-51.9,-52.0,-52.1,-52.1,-52.2,-52.2,-52.3,-52.4,-52.4,-52.5,-52.5,-52.6,-52.7,-52.7,-52.8,-52.8,-52.9,-53.0,-53.0,-53.1,-53.1,-53.2,-53.3,-53.3,-53.4,-53.4,-53.5,-53.6,-53.6,-53.7,-53.7,-53.8,-53.9,-53.9,-54.0,-54.0,-54.1,-54.2,-54.2,-54.3,-54.3,-54.4,-54.5,-54.5,-54.6,-54.7,-54.7,-54.8,-54.8,-54.9,-55.0,-55.0,-55.1,-55.1,-55.2,-55.3,-55.3,-55.4,-55.4,-55.5,-55.6,-55.6,-55.7,-55.7,-55.8,-55.9,-55.9,-56.0,-56.0,-56.1,-56.2,-56.2,-56.3,-56.3,-56.4,-56.5,-56.5,-56.6,-56.6,-56.7,-56.8,-56.8,-56.9,-56.9,-57.0,-57.1,-57.1,-57.2,-57.2,-57.3,-57.4,-57.4,-57.5,-57.5,-57.6,-57.7,-57.7,-57.8,-57.8,-57.9,-58.0,-58.0,-58.1,-58.1,-58.2,-58.3,-58.3,-58.4,-58.4,-58.5,-58.6,-58.6,-58.7,-58.7,-58.8,-58.9,-58.9,-59.0,-59.0,-59.1,-59.2,-59.2,-59.3,-59.3,-59.4,-59.5,-59.5,-59.6,-59.6,-59.7,-59.8,-59.8,-59.9,-59.9,-60.0), True, 1, [])
        self.blocks_vector_source_x_0_0 = blocks.vector_source_f((-50.0,-50.0,-49.9,-49.9,-49.8,-49.8,-49.7,-49.7,-49.7,-49.6,-49.6,-49.5,-49.5,-49.5,-49.4,-49.4,-49.3,-49.3,-49.2,-49.2,-49.2,-49.1,-49.1,-49.0,-49.0,-49.0,-48.9,-48.9,-48.8,-48.8,-48.7,-48.7,-48.7,-48.6,-48.6,-48.5,-48.5,-48.4,-48.4,-48.4,-48.3,-48.3,-48.2,-48.2,-48.2,-48.1,-48.1,-48.0,-48.0,-47.9,-47.9,-47.9,-47.8,-47.8,-47.7,-47.7,-47.7,-47.6,-47.6,-47.5,-47.5,-47.4,-47.4,-47.4,-47.3,-47.3,-47.2,-47.2,-47.2,-47.1,-47.1,-47.0,-47.0,-46.9,-46.9,-46.9,-46.8,-46.8,-46.7,-46.7,-46.6,-46.6,-46.6,-46.5,-46.5,-46.4,-46.4,-46.4,-46.3,-46.3,-46.2,-46.2,-46.1,-46.1,-46.1,-46.0,-46.0,-45.9,-45.9,-45.9,-45.8,-45.8,-45.7,-45.7,-45.6,-45.6,-45.6,-45.5,-45.5,-45.4,-45.4,-45.3,-45.3,-45.3,-45.2,-45.2,-45.1,-45.1,-45.1,-45.0,-45.0,-44.9,-44.9,-44.8,-44.8,-44.8,-44.7,-44.7,-44.6,-44.6,-44.6,-44.5,-44.5,-44.4,-44.4,-44.3,-44.3,-44.3,-44.2,-44.2,-44.1,-44.1,-44.1,-44.0,-44.0,-43.9,-43.9,-43.8,-43.8,-43.8,-43.7,-43.7,-43.6,-43.6,-43.5,-43.5,-43.5,-43.4,-43.4,-43.3,-43.3,-43.3,-43.2,-43.2,-43.1,-43.1,-43.0,-43.0,-43.0,-42.9,-42.9,-42.8,-42.8,-42.8,-42.7,-42.7,-42.6,-42.6,-42.5,-42.5,-42.5,-42.4,-42.4,-42.3,-42.3,-42.2,-42.2,-42.2,-42.1,-42.1,-42.0,-42.0,-42.0,-41.9,-41.9,-41.8,-41.8,-41.7,-41.7,-41.7,-41.6,-41.6,-41.5,-41.5,-41.5,-41.4,-41.4,-41.3,-41.3,-41.2,-41.2,-41.2,-41.1,-41.1,-41.0,-41.0,-41.0,-40.9,-40.9,-40.8,-40.8,-40.7,-40.7,-40.7,-40.6,-40.6,-40.5,-40.5,-40.4,-40.4,-40.4,-40.3,-40.3,-40.2,-40.2,-40.2,-40.1,-40.1,-40.0,-40.0,-39.9,-39.9,-39.9,-39.8,-39.8,-39.7,-39.7,-39.7,-39.6,-39.6,-39.5,-39.5,-39.4,-39.4,-39.4,-39.3,-39.3,-39.2,-39.2,-39.1,-39.1,-39.1,-39.0,-39.0,-38.9,-38.9,-38.9,-38.8,-38.8,-38.7,-38.7,-38.6,-38.6,-38.6,-38.5,-38.5,-38.4,-38.4,-38.4,-38.3,-38.3,-38.2,-38.2,-38.1,-38.1,-38.1,-38.0,-38.0,-37.9,-37.9,-37.9,-37.8,-37.8,-37.7,-37.7,-37.6,-37.6,-37.6,-37.5,-37.5,-37.4,-37.4,-37.3,-37.3,-37.3,-37.2,-37.2,-37.1,-37.1,-37.1,-37.0,-37.0,-36.9,-36.9,-36.8,-36.8,-36.8,-36.7,-36.7,-36.6,-36.6,-36.6,-36.5,-36.5,-36.4,-36.4,-36.3,-36.3,-36.3,-36.2,-36.2,-36.1,-36.1,-36.0,-36.0,-36.0,-35.9,-35.9,-35.8,-35.8,-35.8,-35.7,-35.7,-35.6,-35.6,-35.5,-35.5,-35.5,-35.4,-35.4,-35.3,-35.3,-35.3,-35.2,-35.2,-35.1,-35.1,-35.0,-35.0,-35.0,-34.9,-34.9,-34.8,-34.8,-34.8,-34.7,-34.7,-34.6,-34.6,-34.5,-34.5,-34.5,-34.4,-34.4,-34.3,-34.3,-34.2,-34.2,-34.2,-34.1,-34.1,-34.0,-34.0,-34.0,-33.9,-33.9,-33.8,-33.8,-33.7,-33.7,-33.7,-33.6,-33.6,-33.5,-33.5,-33.5,-33.4,-33.4,-33.3,-33.3,-33.2,-33.2,-33.2,-33.1,-33.1,-33.0,-33.0,-32.9,-32.9,-32.9,-32.8,-32.8,-32.7,-32.7,-32.7,-32.6,-32.6,-32.5,-32.5,-32.4,-32.4,-32.4,-32.3,-32.3,-32.2,-32.2,-32.2,-32.1,-32.1,-32.0,-32.0,-31.9,-31.9,-31.9,-31.8,-31.8,-31.7,-31.7,-31.7,-31.6,-31.6,-31.5,-31.5,-31.4,-31.4,-31.4,-31.3,-31.3,-31.2,-31.2,-31.1,-31.1,-31.1,-31.0,-31.0,-30.9,-30.9,-30.9,-30.8,-30.8,-30.7,-30.7,-30.6,-30.6,-30.6,-30.5,-30.5,-30.4,-30.4,-30.4,-30.3,-30.3,-30.2,-30.2,-30.1,-30.1,-30.1,-30.0,-30.0,-29.9,-29.9,-29.8,-29.8,-29.8,-29.7,-29.7,-29.6,-29.6,-29.6,-29.5,-29.5,-29.4,-29.4,-29.3,-29.3,-29.3,-29.2,-29.2,-29.1,-29.1,-29.1,-29.0,-29.0,-28.9,-28.9,-28.8,-28.8,-28.8,-28.7,-28.7,-28.6,-28.6,-28.6,-28.5,-28.5,-28.4,-28.4,-28.3,-28.3,-28.3,-28.2,-28.2,-28.1,-28.1,-28.0,-28.0,-28.0,-27.9,-27.9,-27.8,-27.8,-27.8,-27.7,-27.7,-27.6,-27.6,-27.5,-27.5,-27.5,-27.4,-27.4,-27.3,-27.3,-27.3,-27.2,-27.2,-27.1,-27.1,-27.0,-27.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-27.0,-27.0,-27.1,-27.1,-27.2,-27.2,-27.3,-27.3,-27.3,-27.4,-27.4,-27.5,-27.5,-27.5,-27.6,-27.6,-27.7,-27.7,-27.8,-27.8,-27.8,-27.9,-27.9,-28.0,-28.0,-28.0,-28.1,-28.1,-28.2,-28.2,-28.3,-28.3,-28.3,-28.4,-28.4,-28.5,-28.5,-28.6,-28.6,-28.6,-28.7,-28.7,-28.8,-28.8,-28.8,-28.9,-28.9,-29.0,-29.0,-29.1,-29.1,-29.1,-29.2,-29.2,-29.3,-29.3,-29.3,-29.4,-29.4,-29.5,-29.5,-29.6,-29.6,-29.6,-29.7,-29.7,-29.8,-29.8,-29.8,-29.9,-29.9,-30.0,-30.0,-30.1,-30.1,-30.1,-30.2,-30.2,-30.3,-30.3,-30.4,-30.4,-30.4,-30.5,-30.5,-30.6,-30.6,-30.6,-30.7,-30.7,-30.8,-30.8,-30.9,-30.9,-30.9,-31.0,-31.0,-31.1,-31.1,-31.1,-31.2,-31.2,-31.3,-31.3,-31.4,-31.4,-31.4,-31.5,-31.5,-31.6,-31.6,-31.7,-31.7,-31.7,-31.8,-31.8,-31.9,-31.9,-31.9,-32.0,-32.0,-32.1,-32.1,-32.2,-32.2,-32.2,-32.3,-32.3,-32.4,-32.4,-32.4,-32.5,-32.5,-32.6,-32.6,-32.7,-32.7,-32.7,-32.8,-32.8,-32.9,-32.9,-32.9,-33.0,-33.0,-33.1,-33.1,-33.2,-33.2,-33.2,-33.3,-33.3,-33.4,-33.4,-33.5,-33.5,-33.5,-33.6,-33.6,-33.7,-33.7,-33.7,-33.8,-33.8,-33.9,-33.9,-34.0,-34.0,-34.0,-34.1,-34.1,-34.2,-34.2,-34.2,-34.3,-34.3,-34.4,-34.4,-34.5,-34.5,-34.5,-34.6,-34.6,-34.7,-34.7,-34.8,-34.8,-34.8,-34.9,-34.9,-35.0,-35.0,-35.0,-35.1,-35.1,-35.2,-35.2,-35.3,-35.3,-35.3,-35.4,-35.4,-35.5,-35.5,-35.5,-35.6,-35.6,-35.7,-35.7,-35.8,-35.8,-35.8,-35.9,-35.9,-36.0,-36.0,-36.0,-36.1,-36.1,-36.2,-36.2,-36.3,-36.3,-36.3,-36.4,-36.4,-36.5,-36.5,-36.6,-36.6,-36.6,-36.7,-36.7,-36.8,-36.8,-36.8,-36.9,-36.9,-37.0,-37.0,-37.1,-37.1,-37.1,-37.2,-37.2,-37.3,-37.3,-37.3,-37.4,-37.4,-37.5,-37.5,-37.6,-37.6,-37.6,-37.7,-37.7,-37.8,-37.8,-37.9,-37.9,-37.9,-38.0,-38.0,-38.1,-38.1,-38.1,-38.2,-38.2,-38.3,-38.3,-38.4,-38.4,-38.4,-38.5,-38.5,-38.6,-38.6,-38.6,-38.7,-38.7,-38.8,-38.8,-38.9,-38.9,-38.9,-39.0,-39.0,-39.1,-39.1,-39.1,-39.2,-39.2,-39.3,-39.3,-39.4,-39.4,-39.4,-39.5,-39.5,-39.6,-39.6,-39.7,-39.7,-39.7,-39.8,-39.8,-39.9,-39.9,-39.9,-40.0,-40.0,-40.1,-40.1,-40.2,-40.2,-40.2,-40.3,-40.3,-40.4,-40.4,-40.4,-40.5,-40.5,-40.6,-40.6,-40.7,-40.7,-40.7,-40.8,-40.8,-40.9,-40.9,-41.0,-41.0,-41.0,-41.1,-41.1,-41.2,-41.2,-41.2,-41.3,-41.3,-41.4,-41.4,-41.5,-41.5,-41.5,-41.6,-41.6,-41.7,-41.7,-41.7,-41.8,-41.8,-41.9,-41.9,-42.0,-42.0,-42.0,-42.1,-42.1,-42.2,-42.2,-42.2,-42.3,-42.3,-42.4,-42.4,-42.5,-42.5,-42.5,-42.6,-42.6,-42.7,-42.7,-42.8,-42.8,-42.8,-42.9,-42.9,-43.0,-43.0,-43.0,-43.1,-43.1,-43.2,-43.2,-43.3,-43.3,-43.3,-43.4,-43.4,-43.5,-43.5,-43.5,-43.6,-43.6,-43.7,-43.7,-43.8,-43.8,-43.8,-43.9,-43.9,-44.0,-44.0,-44.1,-44.1,-44.1,-44.2,-44.2,-44.3,-44.3,-44.3,-44.4,-44.4,-44.5,-44.5,-44.6,-44.6,-44.6,-44.7,-44.7,-44.8,-44.8,-44.8,-44.9,-44.9,-45.0,-45.0,-45.1,-45.1,-45.1,-45.2,-45.2,-45.3,-45.3,-45.3,-45.4,-45.4,-45.5,-45.5,-45.6,-45.6,-45.6,-45.7,-45.7,-45.8,-45.8,-45.9,-45.9,-45.9,-46.0,-46.0,-46.1,-46.1,-46.1,-46.2,-46.2,-46.3,-46.3,-46.4,-46.4,-46.4,-46.5,-46.5,-46.6,-46.6,-46.6,-46.7,-46.7,-46.8,-46.8,-46.9,-46.9,-46.9,-47.0,-47.0,-47.1,-47.1,-47.2,-47.2,-47.2,-47.3,-47.3,-47.4,-47.4,-47.4,-47.5,-47.5,-47.6,-47.6,-47.7,-47.7,-47.7,-47.8,-47.8,-47.9,-47.9,-47.9,-48.0,-48.0,-48.1,-48.1,-48.2,-48.2,-48.2,-48.3,-48.3,-48.4,-48.4,-48.4,-48.5,-48.5,-48.6,-48.6,-48.7,-48.7,-48.7,-48.8,-48.8,-48.9,-48.9,-49.0,-49.0,-49.0,-49.1,-49.1,-49.2,-49.2,-49.2,-49.3,-49.3,-49.4,-49.4,-49.5,-49.5,-49.5,-49.6,-49.6,-49.7,-49.7,-49.7,-49.8,-49.8,-49.9,-49.9,-50.0,-50.0), True, 1, [])
        self.blocks_vector_source_x_0 = blocks.vector_source_f((-45.0,-45.0,-44.9,-44.9,-44.9,-44.8,-44.8,-44.8,-44.7,-44.7,-44.7,-44.6,-44.6,-44.6,-44.5,-44.5,-44.5,-44.4,-44.4,-44.4,-44.3,-44.3,-44.3,-44.2,-44.2,-44.2,-44.1,-44.1,-44.1,-44.0,-44.0,-44.0,-44.0,-43.9,-43.9,-43.9,-43.8,-43.8,-43.8,-43.7,-43.7,-43.7,-43.6,-43.6,-43.6,-43.5,-43.5,-43.5,-43.4,-43.4,-43.4,-43.3,-43.3,-43.3,-43.2,-43.2,-43.2,-43.1,-43.1,-43.1,-43.0,-43.0,-43.0,-42.9,-42.9,-42.9,-42.8,-42.8,-42.8,-42.7,-42.7,-42.7,-42.6,-42.6,-42.6,-42.5,-42.5,-42.5,-42.4,-42.4,-42.4,-42.3,-42.3,-42.3,-42.2,-42.2,-42.2,-42.1,-42.1,-42.1,-42.0,-42.0,-42.0,-42.0,-41.9,-41.9,-41.9,-41.8,-41.8,-41.8,-41.7,-41.7,-41.7,-41.6,-41.6,-41.6,-41.5,-41.5,-41.5,-41.4,-41.4,-41.4,-41.3,-41.3,-41.3,-41.2,-41.2,-41.2,-41.1,-41.1,-41.1,-41.0,-41.0,-41.0,-40.9,-40.9,-40.9,-40.8,-40.8,-40.8,-40.7,-40.7,-40.7,-40.6,-40.6,-40.6,-40.5,-40.5,-40.5,-40.4,-40.4,-40.4,-40.3,-40.3,-40.3,-40.2,-40.2,-40.2,-40.1,-40.1,-40.1,-40.0,-40.0,-40.0,-40.0,-39.9,-39.9,-39.9,-39.8,-39.8,-39.8,-39.7,-39.7,-39.7,-39.6,-39.6,-39.6,-39.5,-39.5,-39.5,-39.4,-39.4,-39.4,-39.3,-39.3,-39.3,-39.2,-39.2,-39.2,-39.1,-39.1,-39.1,-39.0,-39.0,-39.0,-38.9,-38.9,-38.9,-38.8,-38.8,-38.8,-38.7,-38.7,-38.7,-38.6,-38.6,-38.6,-38.5,-38.5,-38.5,-38.4,-38.4,-38.4,-38.3,-38.3,-38.3,-38.2,-38.2,-38.2,-38.1,-38.1,-38.1,-38.0,-38.0,-38.0,-38.0,-37.9,-37.9,-37.9,-37.8,-37.8,-37.8,-37.7,-37.7,-37.7,-37.6,-37.6,-37.6,-37.5,-37.5,-37.5,-37.4,-37.4,-37.4,-37.3,-37.3,-37.3,-37.2,-37.2,-37.2,-37.1,-37.1,-37.1,-37.0,-37.0,-37.0,-36.9,-36.9,-36.9,-36.8,-36.8,-36.8,-36.7,-36.7,-36.7,-36.6,-36.6,-36.6,-36.5,-36.5,-36.5,-36.4,-36.4,-36.4,-36.3,-36.3,-36.3,-36.2,-36.2,-36.2,-36.1,-36.1,-36.1,-36.0,-36.0,-36.0,-36.0,-35.9,-35.9,-35.9,-35.8,-35.8,-35.8,-35.7,-35.7,-35.7,-35.6,-35.6,-35.6,-35.5,-35.5,-35.5,-35.4,-35.4,-35.4,-35.3,-35.3,-35.3,-35.2,-35.2,-35.2,-35.1,-35.1,-35.1,-35.0,-35.0,-35.0,-34.9,-34.9,-34.9,-34.8,-34.8,-34.8,-34.7,-34.7,-34.7,-34.6,-34.6,-34.6,-34.5,-34.5,-34.5,-34.4,-34.4,-34.4,-34.3,-34.3,-34.3,-34.2,-34.2,-34.2,-34.1,-34.1,-34.1,-34.0,-34.0,-34.0,-34.0,-33.9,-33.9,-33.9,-33.8,-33.8,-33.8,-33.7,-33.7,-33.7,-33.6,-33.6,-33.6,-33.5,-33.5,-33.5,-33.4,-33.4,-33.4,-33.3,-33.3,-33.3,-33.2,-33.2,-33.2,-33.1,-33.1,-33.1,-33.0,-33.0,-33.0,-32.9,-32.9,-32.9,-32.8,-32.8,-32.8,-32.7,-32.7,-32.7,-32.6,-32.6,-32.6,-32.5,-32.5,-32.5,-32.4,-32.4,-32.4,-32.3,-32.3,-32.3,-32.2,-32.2,-32.2,-32.1,-32.1,-32.1,-32.0,-32.0,-32.0,-32.0,-31.9,-31.9,-31.9,-31.8,-31.8,-31.8,-31.7,-31.7,-31.7,-31.6,-31.6,-31.6,-31.5,-31.5,-31.5,-31.4,-31.4,-31.4,-31.3,-31.3,-31.3,-31.2,-31.2,-31.2,-31.1,-31.1,-31.1,-31.0,-31.0,-31.0,-30.9,-30.9,-30.9,-30.8,-30.8,-30.8,-30.7,-30.7,-30.7,-30.6,-30.6,-30.6,-30.5,-30.5,-30.5,-30.4,-30.4,-30.4,-30.3,-30.3,-30.3,-30.2,-30.2,-30.2,-30.1,-30.1,-30.1,-30.0,-30.0,-30.0,-30.0,-29.9,-29.9,-29.9,-29.8,-29.8,-29.8,-29.7,-29.7,-29.7,-29.6,-29.6,-29.6,-29.5,-29.5,-29.5,-29.4,-29.4,-29.4,-29.3,-29.3,-29.3,-29.2,-29.2,-29.2,-29.1,-29.1,-29.1,-29.0,-29.0,-29.0,-28.9,-28.9,-28.9,-28.8,-28.8,-28.8,-28.7,-28.7,-28.7,-28.6,-28.6,-28.6,-28.5,-28.5,-28.5,-28.4,-28.4,-28.4,-28.3,-28.3,-28.3,-28.2,-28.2,-28.2,-28.1,-28.1,-28.1,-28.0,-28.0,-28.0,-28.0,-27.9,-27.9,-27.9,-27.8,-27.8,-27.8,-27.7,-27.7,-27.7,-27.6,-27.6,-27.6,-27.5,-27.5,-27.5,-27.4,-27.4,-27.4,-27.3,-27.3,-27.3,-27.2,-27.2,-27.2,-27.1,-27.1,-27.1,-27.0,-27.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-27.0,-27.0,-27.1,-27.1,-27.1,-27.2,-27.2,-27.2,-27.3,-27.3,-27.3,-27.4,-27.4,-27.4,-27.5,-27.5,-27.5,-27.6,-27.6,-27.6,-27.7,-27.7,-27.7,-27.8,-27.8,-27.8,-27.9,-27.9,-27.9,-28.0,-28.0,-28.0,-28.0,-28.1,-28.1,-28.1,-28.2,-28.2,-28.2,-28.3,-28.3,-28.3,-28.4,-28.4,-28.4,-28.5,-28.5,-28.5,-28.6,-28.6,-28.6,-28.7,-28.7,-28.7,-28.8,-28.8,-28.8,-28.9,-28.9,-28.9,-29.0,-29.0,-29.0,-29.1,-29.1,-29.1,-29.2,-29.2,-29.2,-29.3,-29.3,-29.3,-29.4,-29.4,-29.4,-29.5,-29.5,-29.5,-29.6,-29.6,-29.6,-29.7,-29.7,-29.7,-29.8,-29.8,-29.8,-29.9,-29.9,-29.9,-30.0,-30.0,-30.0,-30.0,-30.1,-30.1,-30.1,-30.2,-30.2,-30.2,-30.3,-30.3,-30.3,-30.4,-30.4,-30.4,-30.5,-30.5,-30.5,-30.6,-30.6,-30.6,-30.7,-30.7,-30.7,-30.8,-30.8,-30.8,-30.9,-30.9,-30.9,-31.0,-31.0,-31.0,-31.1,-31.1,-31.1,-31.2,-31.2,-31.2,-31.3,-31.3,-31.3,-31.4,-31.4,-31.4,-31.5,-31.5,-31.5,-31.6,-31.6,-31.6,-31.7,-31.7,-31.7,-31.8,-31.8,-31.8,-31.9,-31.9,-31.9,-32.0,-32.0,-32.0,-32.0,-32.1,-32.1,-32.1,-32.2,-32.2,-32.2,-32.3,-32.3,-32.3,-32.4,-32.4,-32.4,-32.5,-32.5,-32.5,-32.6,-32.6,-32.6,-32.7,-32.7,-32.7,-32.8,-32.8,-32.8,-32.9,-32.9,-32.9,-33.0,-33.0,-33.0,-33.1,-33.1,-33.1,-33.2,-33.2,-33.2,-33.3,-33.3,-33.3,-33.4,-33.4,-33.4,-33.5,-33.5,-33.5,-33.6,-33.6,-33.6,-33.7,-33.7,-33.7,-33.8,-33.8,-33.8,-33.9,-33.9,-33.9,-34.0,-34.0,-34.0,-34.0,-34.1,-34.1,-34.1,-34.2,-34.2,-34.2,-34.3,-34.3,-34.3,-34.4,-34.4,-34.4,-34.5,-34.5,-34.5,-34.6,-34.6,-34.6,-34.7,-34.7,-34.7,-34.8,-34.8,-34.8,-34.9,-34.9,-34.9,-35.0,-35.0,-35.0,-35.1,-35.1,-35.1,-35.2,-35.2,-35.2,-35.3,-35.3,-35.3,-35.4,-35.4,-35.4,-35.5,-35.5,-35.5,-35.6,-35.6,-35.6,-35.7,-35.7,-35.7,-35.8,-35.8,-35.8,-35.9,-35.9,-35.9,-36.0,-36.0,-36.0,-36.0,-36.1,-36.1,-36.1,-36.2,-36.2,-36.2,-36.3,-36.3,-36.3,-36.4,-36.4,-36.4,-36.5,-36.5,-36.5,-36.6,-36.6,-36.6,-36.7,-36.7,-36.7,-36.8,-36.8,-36.8,-36.9,-36.9,-36.9,-37.0,-37.0,-37.0,-37.1,-37.1,-37.1,-37.2,-37.2,-37.2,-37.3,-37.3,-37.3,-37.4,-37.4,-37.4,-37.5,-37.5,-37.5,-37.6,-37.6,-37.6,-37.7,-37.7,-37.7,-37.8,-37.8,-37.8,-37.9,-37.9,-37.9,-38.0,-38.0,-38.0,-38.0,-38.1,-38.1,-38.1,-38.2,-38.2,-38.2,-38.3,-38.3,-38.3,-38.4,-38.4,-38.4,-38.5,-38.5,-38.5,-38.6,-38.6,-38.6,-38.7,-38.7,-38.7,-38.8,-38.8,-38.8,-38.9,-38.9,-38.9,-39.0,-39.0,-39.0,-39.1,-39.1,-39.1,-39.2,-39.2,-39.2,-39.3,-39.3,-39.3,-39.4,-39.4,-39.4,-39.5,-39.5,-39.5,-39.6,-39.6,-39.6,-39.7,-39.7,-39.7,-39.8,-39.8,-39.8,-39.9,-39.9,-39.9,-40.0,-40.0,-40.0,-40.0,-40.1,-40.1,-40.1,-40.2,-40.2,-40.2,-40.3,-40.3,-40.3,-40.4,-40.4,-40.4,-40.5,-40.5,-40.5,-40.6,-40.6,-40.6,-40.7,-40.7,-40.7,-40.8,-40.8,-40.8,-40.9,-40.9,-40.9,-41.0,-41.0,-41.0,-41.1,-41.1,-41.1,-41.2,-41.2,-41.2,-41.3,-41.3,-41.3,-41.4,-41.4,-41.4,-41.5,-41.5,-41.5,-41.6,-41.6,-41.6,-41.7,-41.7,-41.7,-41.8,-41.8,-41.8,-41.9,-41.9,-41.9,-42.0,-42.0,-42.0,-42.0,-42.1,-42.1,-42.1,-42.2,-42.2,-42.2,-42.3,-42.3,-42.3,-42.4,-42.4,-42.4,-42.5,-42.5,-42.5,-42.6,-42.6,-42.6,-42.7,-42.7,-42.7,-42.8,-42.8,-42.8,-42.9,-42.9,-42.9,-43.0,-43.0,-43.0,-43.1,-43.1,-43.1,-43.2,-43.2,-43.2,-43.3,-43.3,-43.3,-43.4,-43.4,-43.4,-43.5,-43.5,-43.5,-43.6,-43.6,-43.6,-43.7,-43.7,-43.7,-43.8,-43.8,-43.8,-43.9,-43.9,-43.9,-44.0,-44.0,-44.0,-44.0,-44.1,-44.1,-44.1,-44.2,-44.2,-44.2,-44.3,-44.3,-44.3,-44.4,-44.4,-44.4,-44.5,-44.5,-44.5,-44.6,-44.6,-44.6,-44.7,-44.7,-44.7,-44.8,-44.8,-44.8,-44.9,-44.9,-44.9,-45.0,-45.0), True, 1, [])
        self.blocks_sub_xx_0_0_0 = blocks.sub_ff(1)
        self.blocks_sub_xx_0_0 = blocks.sub_ff(1)
        self.blocks_sub_xx_0 = blocks.sub_ff(1)
        self.blocks_stream_to_vector_1_0_0 = blocks.stream_to_vector(gr.sizeof_float*1, 4096)
        self.blocks_stream_to_vector_1_0 = blocks.stream_to_vector(gr.sizeof_float*1, 4096)
        self.blocks_stream_to_vector_1 = blocks.stream_to_vector(gr.sizeof_float*1, 4096)
        self.blocks_stream_to_vector_0_1 = blocks.stream_to_vector(gr.sizeof_gr_complex*1, 4096)
        self.blocks_stream_to_vector_0_0 = blocks.stream_to_vector(gr.sizeof_char*1, 188)
        self.blocks_stream_to_vector_0 = blocks.stream_to_vector(gr.sizeof_char*1, 188)
        self.blocks_skiphead_0 = blocks.skiphead(gr.sizeof_gr_complex*data_carriers, 2)
        self.blocks_rms_xx_0_0 = blocks.rms_ff(0.0001)
        self.blocks_nlog10_ff_0 = blocks.nlog10_ff(10, 4096, -20*np.log10(4096))
        self.blocks_multiply_const_xx_0 = blocks.multiply_const_cc(bb_gain)
        self.blocks_keep_one_in_n_0_0 = blocks.keep_one_in_n(gr.sizeof_gr_complex*1, 14)
        self.blocks_file_source_0_0 = blocks.file_source(gr.sizeof_char*1, '/home/mili/Documents/FACULTAD/2020/1er_Cuatrimestre/Radiodifusion/FINAL/layer_b.ts', True)
        self.blocks_file_source_0_0.set_begin_tag(pmt.PMT_NIL)
        self.blocks_file_source_0 = blocks.file_source(gr.sizeof_char*1, '/home/mili/Documents/FACULTAD/2020/1er_Cuatrimestre/Radiodifusion/FINAL/layer_a.ts', True)
        self.blocks_file_source_0.set_begin_tag(pmt.PMT_NIL)
        self.blocks_complex_to_mag_squared_0 = blocks.complex_to_mag_squared(4096)
        self.analog_const_source_x_0_0_0 = analog.sig_source_f(0, analog.GR_CONST_WAVE, 0, 0, AjusteMascara)
        self.analog_const_source_x_0_0 = analog.sig_source_f(0, analog.GR_CONST_WAVE, 0, 0, AjusteMascara)
        self.analog_const_source_x_0 = analog.sig_source_f(0, analog.GR_CONST_WAVE, 0, 0, AjusteMascara)



        ##################################################
        # Connections
        ##################################################
        self.connect((self.analog_const_source_x_0, 0), (self.blocks_sub_xx_0, 1))
        self.connect((self.analog_const_source_x_0_0, 0), (self.blocks_sub_xx_0_0, 1))
        self.connect((self.analog_const_source_x_0_0_0, 0), (self.blocks_sub_xx_0_0_0, 1))
        self.connect((self.blocks_complex_to_mag_squared_0, 0), (self.blocks_nlog10_ff_0, 0))
        self.connect((self.blocks_file_source_0, 0), (self.blocks_stream_to_vector_0, 0))
        self.connect((self.blocks_file_source_0_0, 0), (self.blocks_stream_to_vector_0_0, 0))
        self.connect((self.blocks_keep_one_in_n_0_0, 0), (self.mer_probe_mer_c_0_0_0, 0))
        self.connect((self.blocks_keep_one_in_n_0_0, 0), (self.qtgui_const_sink_x_0_0, 0))
        self.connect((self.blocks_multiply_const_xx_0, 0), (self.channels_channel_model_0, 0))
        self.connect((self.blocks_nlog10_ff_0, 0), (self.qtgui_vector_sink_f_0, 0))
        self.connect((self.blocks_rms_xx_0_0, 0), (self.qtgui_number_sink_0_0, 0))
        self.connect((self.blocks_skiphead_0, 0), (self.isdbt_pilot_signals_0, 0))
        self.connect((self.blocks_stream_to_vector_0, 0), (self.dtv_dvbt_reed_solomon_enc_0, 0))
        self.connect((self.blocks_stream_to_vector_0_0, 0), (self.dtv_dvbt_reed_solomon_enc_0_0, 0))
        self.connect((self.blocks_stream_to_vector_0_1, 0), (self.fft_vxx_0, 0))
        self.connect((self.blocks_stream_to_vector_1, 0), (self.qtgui_vector_sink_f_0, 1))
        self.connect((self.blocks_stream_to_vector_1_0, 0), (self.qtgui_vector_sink_f_0, 2))
        self.connect((self.blocks_stream_to_vector_1_0_0, 0), (self.qtgui_vector_sink_f_0, 3))
        self.connect((self.blocks_sub_xx_0, 0), (self.blocks_stream_to_vector_1, 0))
        self.connect((self.blocks_sub_xx_0_0, 0), (self.blocks_stream_to_vector_1_0, 0))
        self.connect((self.blocks_sub_xx_0_0_0, 0), (self.blocks_stream_to_vector_1_0_0, 0))
        self.connect((self.blocks_vector_source_x_0, 0), (self.blocks_sub_xx_0, 0))
        self.connect((self.blocks_vector_source_x_0_0, 0), (self.blocks_sub_xx_0_0, 0))
        self.connect((self.blocks_vector_source_x_0_0_0, 0), (self.blocks_sub_xx_0_0_0, 0))
        self.connect((self.blocks_vector_to_stream_0_1, 0), (self.isdbt_carrier_modulation_0, 0))
        self.connect((self.blocks_vector_to_stream_0_1_0, 0), (self.isdbt_carrier_modulation_0_0, 0))
        self.connect((self.blocks_vector_to_stream_0_2_0, 0), (self.blocks_keep_one_in_n_0_0, 0))
        self.connect((self.channels_channel_model_0, 0), (self.channels_impairments_0, 0))
        self.connect((self.channels_impairments_0, 0), (self.blocks_stream_to_vector_0_1, 0))
        self.connect((self.channels_impairments_0, 0), (self.low_pass_filter_0_0, 0))
        self.connect((self.digital_ofdm_cyclic_prefixer_0, 0), (self.blocks_multiply_const_xx_0, 0))
        self.connect((self.dtv_dvbt_inner_coder_0_0, 0), (self.blocks_vector_to_stream_0_1, 0))
        self.connect((self.dtv_dvbt_inner_coder_0_0_0, 0), (self.blocks_vector_to_stream_0_1_0, 0))
        self.connect((self.dtv_dvbt_reed_solomon_enc_0, 0), (self.isdbt_energy_dispersal_0, 0))
        self.connect((self.dtv_dvbt_reed_solomon_enc_0_0, 0), (self.isdbt_energy_dispersal_0_0, 0))
        self.connect((self.fft_vxx_0, 0), (self.blocks_complex_to_mag_squared_0, 0))
        self.connect((self.fft_vxx_1, 0), (self.digital_ofdm_cyclic_prefixer_0, 0))
        self.connect((self.isdbt_byte_interleaver_0, 0), (self.dtv_dvbt_inner_coder_0_0, 0))
        self.connect((self.isdbt_byte_interleaver_0_0, 0), (self.dtv_dvbt_inner_coder_0_0_0, 0))
        self.connect((self.isdbt_carrier_modulation_0, 0), (self.isdbt_hierarchical_combinator_0, 0))
        self.connect((self.isdbt_carrier_modulation_0_0, 0), (self.isdbt_hierarchical_combinator_0, 1))
        self.connect((self.isdbt_energy_dispersal_0, 0), (self.isdbt_byte_interleaver_0, 0))
        self.connect((self.isdbt_energy_dispersal_0_0, 0), (self.isdbt_byte_interleaver_0_0, 0))
        self.connect((self.isdbt_frequency_interleaver_0, 0), (self.blocks_skiphead_0, 0))
        self.connect((self.isdbt_hierarchical_combinator_0, 0), (self.isdbt_time_interleaver_0, 0))
        self.connect((self.isdbt_isdbt_rf_channel_decoding_0_0, 0), (self.isdbt_subset_of_carriers_0_0, 0))
        self.connect((self.isdbt_pilot_signals_0, 0), (self.isdbt_tmcc_encoder_0, 0))
        self.connect((self.isdbt_subset_of_carriers_0_0, 0), (self.blocks_vector_to_stream_0_2_0, 0))
        self.connect((self.isdbt_time_interleaver_0, 0), (self.isdbt_frequency_interleaver_0, 0))
        self.connect((self.isdbt_tmcc_encoder_0, 0), (self.fft_vxx_1, 0))
        self.connect((self.low_pass_filter_0_0, 0), (self.isdbt_isdbt_rf_channel_decoding_0_0, 0))
        self.connect((self.mer_probe_mer_c_0_0_0, 0), (self.blocks_rms_xx_0_0, 0))

    def closeEvent(self, event):
        self.settings = Qt.QSettings("GNU Radio", "top_block")
        self.settings.setValue("geometry", self.saveGeometry())
        event.accept()

    def get_samp_rate(self):
        return self.samp_rate

    def set_samp_rate(self, samp_rate):
        self.samp_rate = samp_rate
        self.qtgui_vector_sink_f_0.set_x_axis(-(self.samp_rate/2)/1e6, (self.samp_rate/4096)/1e6)
        self.low_pass_filter_0_0.set_taps(firdes.low_pass(1, self.samp_rate, 5.8e6/2.0, 0.5e6, firdes.WIN_HAMMING, 6.76))

    def get_taps(self):
        return self.taps

    def set_taps(self, taps):
        self.taps = taps
        self.set_delay((len(self.taps)/2)-1)
        self.channels_channel_model_0.set_taps((self.taps))

    def get_mode(self):
        return self.mode

    def set_mode(self, mode):
        self.mode = mode
        self.set_total_carriers(2**(10+self.mode))
        self.set_data_carriers(13*96*2**(self.mode-1))

    def get_total_carriers(self):
        return self.total_carriers

    def set_total_carriers(self, total_carriers):
        self.total_carriers = total_carriers

    def get_symbol_table_QPSK(self):
        return self.symbol_table_QPSK

    def set_symbol_table_QPSK(self, symbol_table_QPSK):
        self.symbol_table_QPSK = symbol_table_QPSK

    def get_symbol_table_64QAM(self):
        return self.symbol_table_64QAM

    def set_symbol_table_64QAM(self, symbol_table_64QAM):
        self.symbol_table_64QAM = symbol_table_64QAM

    def get_segments_c(self):
        return self.segments_c

    def set_segments_c(self, segments_c):
        self.segments_c = segments_c

    def get_segments_b(self):
        return self.segments_b

    def set_segments_b(self, segments_b):
        self.segments_b = segments_b

    def get_segments_a(self):
        return self.segments_a

    def set_segments_a(self, segments_a):
        self.segments_a = segments_a

    def get_phase_noise(self):
        return self.phase_noise

    def set_phase_noise(self, phase_noise):
        self.phase_noise = phase_noise
        self.channels_impairments_0.set_phase_noise_mag(self.phase_noise)

    def get_noise_volt(self):
        return self.noise_volt

    def set_noise_volt(self, noise_volt):
        self.noise_volt = noise_volt
        self.channels_channel_model_0.set_noise_voltage(self.noise_volt)

    def get_length_c(self):
        return self.length_c

    def set_length_c(self, length_c):
        self.length_c = length_c

    def get_length_b(self):
        return self.length_b

    def set_length_b(self, length_b):
        self.length_b = length_b

    def get_length_a(self):
        return self.length_a

    def set_length_a(self, length_a):
        self.length_a = length_a

    def get_guard(self):
        return self.guard

    def set_guard(self, guard):
        self.guard = guard

    def get_frec_offset(self):
        return self.frec_offset

    def set_frec_offset(self, frec_offset):
        self.frec_offset = frec_offset
        self.channels_impairments_0.set_freq_offset(self.frec_offset)
        self.channels_channel_model_0.set_frequency_offset(self.frec_offset)

    def get_delay(self):
        return self.delay

    def set_delay(self, delay):
        self.delay = delay

    def get_data_carriers(self):
        return self.data_carriers

    def set_data_carriers(self, data_carriers):
        self.data_carriers = data_carriers

    def get_bb_gain(self):
        return self.bb_gain

    def set_bb_gain(self, bb_gain):
        self.bb_gain = bb_gain
        self.blocks_multiply_const_xx_0.set_k(self.bb_gain)

    def get_TOI(self):
        return self.TOI

    def set_TOI(self, TOI):
        self.TOI = TOI
        self.channels_impairments_0.set_beta(self.TOI)

    def get_SOI(self):
        return self.SOI

    def set_SOI(self, SOI):
        self.SOI = SOI
        self.channels_impairments_0.set_gamma(self.SOI)

    def get_Quad_Offset(self):
        return self.Quad_Offset

    def set_Quad_Offset(self, Quad_Offset):
        self.Quad_Offset = Quad_Offset
        self.channels_impairments_0.set_q_ofs(self.Quad_Offset)

    def get_Infase_Offset(self):
        return self.Infase_Offset

    def set_Infase_Offset(self, Infase_Offset):
        self.Infase_Offset = Infase_Offset
        self.channels_impairments_0.set_i_ofs(self.Infase_Offset)

    def get_IQ_Phase_Imbalance(self):
        return self.IQ_Phase_Imbalance

    def set_IQ_Phase_Imbalance(self, IQ_Phase_Imbalance):
        self.IQ_Phase_Imbalance = IQ_Phase_Imbalance
        self.channels_impairments_0.set_phasebal(self.IQ_Phase_Imbalance)

    def get_IQ_Mag_Imbalance(self):
        return self.IQ_Mag_Imbalance

    def set_IQ_Mag_Imbalance(self, IQ_Mag_Imbalance):
        self.IQ_Mag_Imbalance = IQ_Mag_Imbalance
        self.channels_impairments_0.set_magbal(self.IQ_Mag_Imbalance)

    def get_AjusteMascara(self):
        return self.AjusteMascara

    def set_AjusteMascara(self, AjusteMascara):
        self.AjusteMascara = AjusteMascara
        self.analog_const_source_x_0_0_0.set_offset(self.AjusteMascara)
        self.analog_const_source_x_0_0.set_offset(self.AjusteMascara)
        self.analog_const_source_x_0.set_offset(self.AjusteMascara)


def main(top_block_cls=top_block, options=None):

    qapp = Qt.QApplication(sys.argv)

    tb = top_block_cls()
    tb.start()
    tb.show()

    def quitting():
        tb.stop()
        tb.wait()
    qapp.aboutToQuit.connect(quitting)
    qapp.exec_()


if __name__ == '__main__':
    main()
